/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Video;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import javax.media.Manager;
import javax.media.Buffer;
import javax.media.ControllerAdapter;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.PrefetchCompleteEvent;
import javax.media.RealizeCompleteEvent;
import javax.media.StartEvent;
import javax.media.StopEvent;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;



/**
 *  Clase para Reproducir un Video
 * @author Angel
 */
public class VentanaInternaJMFPlayer extends javax.swing.JInternalFrame {

    private Player player;
    Component video;
    Component control;
    /**
     * Creates new form VentanaInternaJMFPlayer
     * @param  archivo que se ha abierto
     */
    public VentanaInternaJMFPlayer() {
        initComponents();
        
        
    }
    /**
     * MEtodo para reproducir un video
     * @param url Se le pasa la ubicacion del archivo a reproducir
     */
    public void play(URL url){
        try{
//            MediaLocator media = new MediaLocator(f.getAbsolutePath());
//            player = Manager.createPlayer(media);
//            Component video = player.getVisualComponent();
//            if(video!=null) jPanel.add(video);
//            Component control = player.getControlPanelComponent();
//            if(control!=null) jPanel.add(video);
            Manager.setHint(Manager.LIGHTWEIGHT_RENDERER, true);

            MediaLocator media = new MediaLocator(url);
            player = Manager.createPlayer(media);
            player.addControllerListener(new manejadorJMF());
            
            //video.setSize(800, 500);
            //video.setVisible(true);
            //add(video);
            
            
            
            player.start();
        }catch(Exception e){
            System.err.println(e);
        }
    }
    /**
     * Metodo que da el reproductor actual
     * @return Devuelve la variable tipo {@code Player}
     */
    public Player getPlayer(){
        return this.player;
    }
    
    
    /**
     * Métodoo para capturar una imagen de una ventana tanto en reproducción
     * de vídeo como de una ventana webcam.
     * @return Imagen capturada.
     */
    public BufferedImage getFrame(){
        FrameGrabbingControl fgc;
        String claseCtr = "javax.media.control.FrameGrabbingControl";
        fgc = (FrameGrabbingControl)player.getControl(claseCtr );
        Buffer bufferFrame = fgc.grabFrame();
        BufferToImage bti;
        bti=new BufferToImage((VideoFormat)bufferFrame.getFormat());
        Image img = bti.createImage(bufferFrame);
        return (BufferedImage)img;
    }
    
    /**
     * Clase manejador para controlar el panel del video y añadirlos despues al player.
     */
    class manejadorJMF extends ControllerAdapter{

        @Override
        public void stop(StopEvent e) {
            super.stop(e); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void start(StartEvent e) {
            super.start(e); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void realizeComplete(RealizeCompleteEvent e) {
            video = player.getVisualComponent();
            jPanel1.add(video);
            video.setSize(400,300);
            video.setVisible(true);
            control = player.getControlPanelComponent();
            control.setSize(400, 30);
            control.setLocation(0, 300);
            
            control.setVisible(true);
            jPanel1.add(control);
        }

        @Override
        public void prefetchComplete(PrefetchCompleteEvent e) {
            super.prefetchComplete(e); //To change body of generated methods, choose Tools | Templates.
        }
        
    }
  
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        close();
    }//GEN-LAST:event_formInternalFrameClosing

    private void close(){
        if(player!= null){
            player.stop();
            player.deallocate();
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
