/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paintbasico2d;

import Sonido.VentanaInternaGrabacion;
import Sonido.VentanaInternaReproductor;
import Video.VentanaInternaCamara;
import Video.VentanaInternaJMFPlayer;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.color.ICC_ProfileGray;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BandCombineOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileFilter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.net.URL;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.CannotRealizeException;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Angel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        BufferedImage img=null;
        private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de Sonido aceptado", "wav");
        private FileNameExtensionFilter filterImg = new FileNameExtensionFilter("Archivos aceptados de im√°genes", "png","jpg");
        private FileNameExtensionFilter filterImgJPG = new FileNameExtensionFilter("*.jpg", "jpg", "JPG");
        private FileNameExtensionFilter filterImgPNG = new FileNameExtensionFilter("*.png", "png", "PNG");
        private FileNameExtensionFilter filterVideo = new FileNameExtensionFilter("Arcivos de Video aceptado", "avi");
        private VentanaInternaJMFPlayer video;
        private VentanaInternaCamara camara;
        
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jMenu3 = new javax.swing.JMenu();
        jPanelAbajo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanelColor = new javax.swing.JPanel();
        jButtonRojo = new javax.swing.JButton();
        jButtonAzul = new javax.swing.JButton();
        jButtonNegro = new javax.swing.JButton();
        jButtonBlanco = new javax.swing.JButton();
        jButtonAmarillo = new javax.swing.JButton();
        jButtonVerde = new javax.swing.JButton();
        jPanelGrosor = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        jPanelRellenoEditar = new javax.swing.JPanel();
        jCheckBoxRelleno = new javax.swing.JCheckBox();
        jCheckBoxEditar = new javax.swing.JCheckBox();
        jPanelBrilloFiltro = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jSliderBrillo = new javax.swing.JSlider();
        jPanelContraste = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanelRotacion = new javax.swing.JPanel();
        jSliderRotacion = new javax.swing.JSlider();
        jButton180grados = new javax.swing.JButton();
        jButton270grados = new javax.swing.JButton();
        jButton90grados = new javax.swing.JButton();
        jPanelEscala = new javax.swing.JPanel();
        jButtonAgrandar = new javax.swing.JButton();
        jButtonAchicar = new javax.swing.JButton();
        jLabelBarraEstado = new javax.swing.JLabel();
        escritorio = new javax.swing.JDesktopPane();
        jToolBarPintar = new javax.swing.JToolBar();
        jToggleButtonPunto = new javax.swing.JToggleButton();
        jToggleButtonLinea = new javax.swing.JToggleButton();
        jToggleButtonRectangulo = new javax.swing.JToggleButton();
        jToggleButtonElipse = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuSonido = new javax.swing.JMenu();
        jMenuItemGrabar_Sonido = new javax.swing.JMenuItem();
        jMenuItemAbrir_sonido = new javax.swing.JMenuItem();
        jMenuImagen = new javax.swing.JMenu();
        jMenuItemAbrirImagen = new javax.swing.JMenuItem();
        jMenuItemNuevoImagen = new javax.swing.JMenuItem();
        jMenuItemGuardarImagen = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemAbrirVideo = new javax.swing.JMenuItem();
        jMenuItemCapturarVideo = new javax.swing.JMenuItem();
        jMenuWebCam = new javax.swing.JMenu();
        jMenuItemAbrirWebCam = new javax.swing.JMenuItem();
        jMenuItemCapturarWebCam = new javax.swing.JMenuItem();
        jMenuEdicion = new javax.swing.JMenu();
        jCheckBoxMenuItemOcultaBarraEstado = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        ResacaleOp = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemAffineTransformOp = new javax.swing.JMenuItem();
        jMenuItemLookUpOp = new javax.swing.JMenuItem();
        jMenuItemBandCombineOp = new javax.swing.JMenuItem();
        jMenuItemColorConvertOp = new javax.swing.JMenuItem();
        jMenuItemUmbralizacionOp = new javax.swing.JMenuItem();
        jMenuItemRestaOp = new javax.swing.JMenuItem();
        jMenuItemMultiplicacionOp = new javax.swing.JMenuItem();
        jMenuItemSobelOp = new javax.swing.JMenuItem();

        jTabbedPane2.addTab("tab1", jTabbedPane3);

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Evaluacion Sistemas Multimedia");
        setForeground(java.awt.Color.gray);
        setIconImage(getIconImage());

        jPanelAbajo.setLayout(new java.awt.BorderLayout());

        jPanelColor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Color", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jButtonRojo.setBackground(java.awt.Color.red);
        jButtonRojo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRojoMouseClicked(evt);
            }
        });

        jButtonAzul.setBackground(java.awt.Color.blue);
        jButtonAzul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAzulMouseClicked(evt);
            }
        });

        jButtonNegro.setBackground(new java.awt.Color(0, 0, 0));
        jButtonNegro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNegroMouseClicked(evt);
            }
        });

        jButtonBlanco.setBackground(new java.awt.Color(255, 255, 255));
        jButtonBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBlancoMouseClicked(evt);
            }
        });

        jButtonAmarillo.setBackground(java.awt.Color.yellow);
        jButtonAmarillo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAmarilloMouseClicked(evt);
            }
        });

        jButtonVerde.setBackground(java.awt.Color.green);
        jButtonVerde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonVerdeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelColorLayout = new javax.swing.GroupLayout(jPanelColor);
        jPanelColor.setLayout(jPanelColorLayout);
        jPanelColorLayout.setHorizontalGroup(
            jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelColorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButtonNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelColorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelColorLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelColorLayout.setVerticalGroup(
            jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelColorLayout.createSequentialGroup()
                .addGroup(jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonAmarillo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonVerde, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelGrosor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grosor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        jSpinner1.setMinimumSize(new java.awt.Dimension(50, 20));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jPanelGrosor.add(jSpinner1);

        jPanelRellenoEditar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jCheckBoxRelleno.setText("Relleno");
        jCheckBoxRelleno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxRellenoStateChanged(evt);
            }
        });

        jCheckBoxEditar.setText("Editar");
        jCheckBoxEditar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxEditarStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelRellenoEditarLayout = new javax.swing.GroupLayout(jPanelRellenoEditar);
        jPanelRellenoEditar.setLayout(jPanelRellenoEditarLayout);
        jPanelRellenoEditarLayout.setHorizontalGroup(
            jPanelRellenoEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRellenoEditarLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanelRellenoEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxEditar)
                    .addComponent(jCheckBoxRelleno)))
        );
        jPanelRellenoEditarLayout.setVerticalGroup(
            jPanelRellenoEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRellenoEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxRelleno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addComponent(jCheckBoxEditar))
        );

        jPanelBrilloFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder("Brillo / Filtro"));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Emborronamiento media", "Emborronamiento binomial", "Enfoque", "Relieve","Detector de fronteras laplaciano" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jSliderBrillo.setMaximum(200);
        jSliderBrillo.setMinimum(-200);
        jSliderBrillo.setToolTipText("");
        jSliderBrillo.setValue(0);
        jSliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrilloStateChanged(evt);
            }
        });
        jSliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderBrilloFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrilloFiltroLayout = new javax.swing.GroupLayout(jPanelBrilloFiltro);
        jPanelBrilloFiltro.setLayout(jPanelBrilloFiltroLayout);
        jPanelBrilloFiltroLayout.setHorizontalGroup(
            jPanelBrilloFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrilloFiltroLayout.createSequentialGroup()
                .addComponent(jSliderBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelBrilloFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBrilloFiltroLayout.setVerticalGroup(
            jPanelBrilloFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBrilloFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSliderBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelContraste.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraste"));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/contraste.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iluminar.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/oscurecer.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelContrasteLayout = new javax.swing.GroupLayout(jPanelContraste);
        jPanelContraste.setLayout(jPanelContrasteLayout);
        jPanelContrasteLayout.setHorizontalGroup(
            jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContrasteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelContrasteLayout.setVerticalGroup(
            jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContrasteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6))
        );

        jPanelRotacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotaci√≥n"));

        jSliderRotacion.setMajorTickSpacing(90);
        jSliderRotacion.setMaximum(360);
        jSliderRotacion.setPaintTicks(true);
        jSliderRotacion.setToolTipText("");
        jSliderRotacion.setValue(180);
        jSliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRotacionStateChanged(evt);
            }
        });
        jSliderRotacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderRotacionFocusLost(evt);
            }
        });

        jButton180grados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion180.png"))); // NOI18N
        jButton180grados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton180gradosActionPerformed(evt);
            }
        });

        jButton270grados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion270.png"))); // NOI18N
        jButton270grados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton270gradosActionPerformed(evt);
            }
        });

        jButton90grados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion90.png"))); // NOI18N
        jButton90grados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton90gradosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRotacionLayout = new javax.swing.GroupLayout(jPanelRotacion);
        jPanelRotacion.setLayout(jPanelRotacionLayout);
        jPanelRotacionLayout.setHorizontalGroup(
            jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRotacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanelRotacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton180grados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton270grados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton90grados)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelRotacionLayout.setVerticalGroup(
            jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotacionLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jSliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton90grados, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton180grados)
                        .addComponent(jButton270grados)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelEscala.setBorder(javax.swing.BorderFactory.createTitledBorder("Escala"));
        jPanelEscala.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelEscalaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelEscalaMouseExited(evt);
            }
        });

        jButtonAgrandar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/aumentar.png"))); // NOI18N
        jButtonAgrandar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonAgrandarMouseEntered(evt);
            }
        });
        jButtonAgrandar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgrandarActionPerformed(evt);
            }
        });

        jButtonAchicar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/disminuir.png"))); // NOI18N
        jButtonAchicar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonAchicarMouseEntered(evt);
            }
        });
        jButtonAchicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAchicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEscalaLayout = new javax.swing.GroupLayout(jPanelEscala);
        jPanelEscala.setLayout(jPanelEscalaLayout);
        jPanelEscalaLayout.setHorizontalGroup(
            jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEscalaLayout.createSequentialGroup()
                .addGroup(jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAgrandar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAchicar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanelEscalaLayout.setVerticalGroup(
            jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEscalaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAgrandar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAchicar))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelGrosor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRellenoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBrilloFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContraste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanelRellenoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelGrosor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanelBrilloFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelContraste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelEscala, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAbajo.add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabelBarraEstado.setText("Label");
        jLabelBarraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanelAbajo.add(jLabelBarraEstado, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanelAbajo, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 503, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jToolBarPintar.setRollover(true);

        buttonGroup1.add(jToggleButtonPunto);
        jToggleButtonPunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Lapiz.gif"))); // NOI18N
        jToggleButtonPunto.setFocusable(false);
        jToggleButtonPunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonPunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonPuntoActionPerformed(evt);
            }
        });
        jToolBarPintar.add(jToggleButtonPunto);

        buttonGroup1.add(jToggleButtonLinea);
        jToggleButtonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Linea.gif"))); // NOI18N
        jToggleButtonLinea.setFocusable(false);
        jToggleButtonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLineaActionPerformed(evt);
            }
        });
        jToolBarPintar.add(jToggleButtonLinea);

        buttonGroup1.add(jToggleButtonRectangulo);
        jToggleButtonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Rectangulo.gif"))); // NOI18N
        jToggleButtonRectangulo.setFocusable(false);
        jToggleButtonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRectanguloActionPerformed(evt);
            }
        });
        jToolBarPintar.add(jToggleButtonRectangulo);

        buttonGroup1.add(jToggleButtonElipse);
        jToggleButtonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Ovalo.gif"))); // NOI18N
        jToggleButtonElipse.setFocusable(false);
        jToggleButtonElipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonElipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonElipseActionPerformed(evt);
            }
        });
        jToolBarPintar.add(jToggleButtonElipse);

        getContentPane().add(jToolBarPintar, java.awt.BorderLayout.NORTH);

        jMenuArchivo.setText("Archivo");

        jMenuSonido.setText("Sonido");

        jMenuItemGrabar_Sonido.setText("Grabar");
        jMenuItemGrabar_Sonido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGrabar_SonidoActionPerformed(evt);
            }
        });
        jMenuSonido.add(jMenuItemGrabar_Sonido);

        jMenuItemAbrir_sonido.setText("Abrir");
        jMenuItemAbrir_sonido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrir_sonidoActionPerformed(evt);
            }
        });
        jMenuSonido.add(jMenuItemAbrir_sonido);

        jMenuArchivo.add(jMenuSonido);

        jMenuImagen.setText("Imagen");

        jMenuItemAbrirImagen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAbrirImagen.setText("Abrir Imagen");
        jMenuItemAbrirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirImagenActionPerformed(evt);
            }
        });
        jMenuImagen.add(jMenuItemAbrirImagen);

        jMenuItemNuevoImagen.setText("Nuevo Imagen");
        jMenuItemNuevoImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoImagenActionPerformed(evt);
            }
        });
        jMenuImagen.add(jMenuItemNuevoImagen);

        jMenuItemGuardarImagen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemGuardarImagen.setText("Guardar Imagen");
        jMenuItemGuardarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarImagenActionPerformed(evt);
            }
        });
        jMenuImagen.add(jMenuItemGuardarImagen);

        jMenuArchivo.add(jMenuImagen);

        jMenu2.setText("Video");

        jMenuItemAbrirVideo.setText("Abrir");
        jMenuItemAbrirVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirVideoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemAbrirVideo);

        jMenuItemCapturarVideo.setText("Capturar");
        jMenuItemCapturarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCapturarVideoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCapturarVideo);

        jMenuArchivo.add(jMenu2);

        jMenuWebCam.setText("WebCam");

        jMenuItemAbrirWebCam.setText("Abrir");
        jMenuItemAbrirWebCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirWebCamActionPerformed(evt);
            }
        });
        jMenuWebCam.add(jMenuItemAbrirWebCam);

        jMenuItemCapturarWebCam.setText("Capturar");
        jMenuItemCapturarWebCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCapturarWebCamActionPerformed(evt);
            }
        });
        jMenuWebCam.add(jMenuItemCapturarWebCam);

        jMenuArchivo.add(jMenuWebCam);

        jMenuBar1.add(jMenuArchivo);

        jMenuEdicion.setText("Edici√≥n");

        jCheckBoxMenuItemOcultaBarraEstado.setSelected(true);
        jCheckBoxMenuItemOcultaBarraEstado.setText("Ocultar Barra de Estado");
        jCheckBoxMenuItemOcultaBarraEstado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxMenuItemOcultaBarraEstadoStateChanged(evt);
            }
        });
        jMenuEdicion.add(jCheckBoxMenuItemOcultaBarraEstado);

        jMenuBar1.add(jMenuEdicion);

        jMenu1.setText("Imagen");

        ResacaleOp.setText("ResacaleOp");
        ResacaleOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResacaleOpActionPerformed(evt);
            }
        });
        jMenu1.add(ResacaleOp);

        jMenuItem1.setText("ConvolveOp");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItemAffineTransformOp.setText("AffineTransformOp");
        jMenuItemAffineTransformOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAffineTransformOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAffineTransformOp);

        jMenuItemLookUpOp.setText("LookUpOp");
        jMenuItemLookUpOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLookUpOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLookUpOp);

        jMenuItemBandCombineOp.setText("BandCombineOp");
        jMenuItemBandCombineOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBandCombineOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemBandCombineOp);

        jMenuItemColorConvertOp.setText("ColorConvertOp");
        jMenuItemColorConvertOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemColorConvertOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemColorConvertOp);

        jMenuItemUmbralizacionOp.setText("UmbralizacionOp");
        jMenuItemUmbralizacionOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUmbralizacionOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemUmbralizacionOp);

        jMenuItemRestaOp.setText("RestaOp");
        jMenuItemRestaOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRestaOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemRestaOp);

        jMenuItemMultiplicacionOp.setText("MultiplicacionOp");
        jMenuItemMultiplicacionOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMultiplicacionOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemMultiplicacionOp);

        jMenuItemSobelOp.setText("SobelOp");
        jMenuItemSobelOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobelOpActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSobelOp);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNuevoImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoImagenActionPerformed
        int x,y;
        x=(int) (Math.random()*(20-200)+200);
        y=(int) (Math.random()*(20-200)+200);
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        vi.setLocation(x ,y);

    }//GEN-LAST:event_jMenuItemNuevoImagenActionPerformed

    private void jCheckBoxMenuItemOcultaBarraEstadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemOcultaBarraEstadoStateChanged
        this.jLabelBarraEstado.setVisible(this.jCheckBoxMenuItemOcultaBarraEstado.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemOcultaBarraEstadoStateChanged

    private void jButtonNegroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNegroMouseClicked
       Lienzo.SetColor(Color.black);
       repaint();
    }//GEN-LAST:event_jButtonNegroMouseClicked

    private void jButtonBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBlancoMouseClicked
       Lienzo.SetColor(Color.white);
       repaint();
    }//GEN-LAST:event_jButtonBlancoMouseClicked

    private void jButtonRojoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRojoMouseClicked
        Lienzo.SetColor(Color.red);
        repaint();
    }//GEN-LAST:event_jButtonRojoMouseClicked

    private void jButtonAzulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAzulMouseClicked
        Lienzo.SetColor(Color.blue);
        repaint();
        
    }//GEN-LAST:event_jButtonAzulMouseClicked

    private void jButtonAmarilloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAmarilloMouseClicked
        Lienzo.SetColor(Color.yellow);
        repaint();
    }//GEN-LAST:event_jButtonAmarilloMouseClicked

    private void jButtonVerdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonVerdeMouseClicked
        Lienzo.SetColor(Color.green);
        repaint();
    }//GEN-LAST:event_jButtonVerdeMouseClicked

    private void jToggleButtonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonPuntoActionPerformed
        Lienzo.SetForma(0);
        this.jLabelBarraEstado.setText("Punto");
    }//GEN-LAST:event_jToggleButtonPuntoActionPerformed

    private void jToggleButtonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLineaActionPerformed
        Lienzo.SetForma(1);
        this.jLabelBarraEstado.setText("Linea");
    }//GEN-LAST:event_jToggleButtonLineaActionPerformed

    private void jToggleButtonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRectanguloActionPerformed
        Lienzo.SetForma(2);
        this.jLabelBarraEstado.setText("Rectangulo");
    }//GEN-LAST:event_jToggleButtonRectanguloActionPerformed

    private void jToggleButtonElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonElipseActionPerformed
        Lienzo.SetForma(3);
        this.jLabelBarraEstado.setText("Elipse");
    }//GEN-LAST:event_jToggleButtonElipseActionPerformed

    private void jCheckBoxRellenoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxRellenoStateChanged
        Lienzo.SetRelleno(this.jCheckBoxRelleno.isSelected());
        repaint();
    }//GEN-LAST:event_jCheckBoxRellenoStateChanged

    private void jMenuItemGuardarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarImagenActionPerformed
        VentanaInterna vi= (VentanaInterna)escritorio.getSelectedFrame();
        BufferedImage img = vi.getLienzo().getImage(); 
        JFileChooser dlg = new JFileChooser(); 
        int resp = dlg.showSaveDialog(this); 
        
        FileFilter filter= new FileFilter() {

            @Override
            public boolean accept(File pathname) {
               return pathname.isFile();
            }
        };
        
        if( resp == JFileChooser.APPROVE_OPTION) {  
            try{
                
                File f = dlg.getSelectedFile();
                f.listFiles(filter);
                vi.getLienzo().volcarImg(img);
                ImageIO.write(img, "jpg", f);
            }catch(Exception ex){
                System.err.println("Error al guardar la imagen.");
            } 
        }
    }//GEN-LAST:event_jMenuItemGuardarImagenActionPerformed

    private void jMenuItemAbrirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirImagenActionPerformed
    JFileChooser dlg = new JFileChooser(); 
    dlg.setFileFilter(filterImgJPG);
    dlg.setFileFilter(filterImgPNG);
    dlg.setFileFilter(filterImg);
  int resp = dlg.showOpenDialog(this); 
  if( resp == JFileChooser.APPROVE_OPTION) { 
    try{ 
       File f = dlg.getSelectedFile();
       img = ImageIO.read(f); 
       VentanaInterna vi = new VentanaInterna(); 
       vi.getLienzo().setImage(img); 
       this.escritorio.add(vi); 
       vi.setVisible(true); 
    }catch(Exception ex){ 
      System.err.println("Error al leer la imagen"); 
    } 
  } 
    }//GEN-LAST:event_jMenuItemAbrirImagenActionPerformed

    private void jCheckBoxEditarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxEditarStateChanged
        Lienzo.SetEditar(this.jCheckBoxEditar.isSelected());
    }//GEN-LAST:event_jCheckBoxEditarStateChanged

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        Lienzo.SetStroke(new BasicStroke(((Integer)this.jSpinner1.getValue()).intValue()));
        repaint();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void ResacaleOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResacaleOpActionPerformed
       VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(ImgSource!=null){
               try{
                   RescaleOp rop= new RescaleOp(1.0F, 100.0F, null);
                   BufferedImage imgdest=rop.filter(ImgSource, null);
                   vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                   
               }catch(IllegalArgumentException e){
                   System.err.println(e.getLocalizedMessage());
               }
           }
       }
    }//GEN-LAST:event_ResacaleOpActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(ImgSource!=null){
               try{
                   float filtroMedia[]={ 0.1f, 0.1f, 0.1f,
                                         0.1f, 0.2f, 0.1f , 
                                         0.1f, 0.1f, 0.1f};
                   Kernel k=new Kernel(3,3,filtroMedia);
                   ConvolveOp cop= new ConvolveOp(k);
                   
                   BufferedImage imgdest=cop.filter(ImgSource, null);
                   vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                   
               }catch(IllegalArgumentException e){
                   System.err.println(e.getLocalizedMessage());
               }
           }
       }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        int index=jComboBox2.getSelectedIndex();
        Kernel k;
        
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(ImgSource!=null){
               try{
                    switch(index){
                        case 0:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                            break;
                        case 1:k=KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                            break;
                        case 2:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                            break;
                        case 3:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                            break;
                        case 4:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                            break;
                        default: k=null;
                        
                    }
                   
                   ConvolveOp cop= new ConvolveOp(k);
                   
                   BufferedImage imgdest=cop.filter(ImgSource, null);
                   vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                   
               }catch(IllegalArgumentException e){
                   System.err.println(e.getLocalizedMessage());
               }
           }
       }    
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jSliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrilloStateChanged
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       
        if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(img==null)img=ImgSource;
           if(ImgSource!=null){
               try{
                   float slider = jSliderBrillo.getValue();
                   RescaleOp rop= new RescaleOp(1.0F, slider, null);
                   BufferedImage imgdest=rop.filter(this.img, null);
                   vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                   
               }catch(IllegalArgumentException e){
                   System.err.println(e.getLocalizedMessage());
               }
           }
       }
    }//GEN-LAST:event_jSliderBrilloStateChanged

    private void jSliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderBrilloFocusLost
        img=null;
    }//GEN-LAST:event_jSliderBrilloFocusLost

    private void jMenuItemBandCombineOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBandCombineOpActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                WritableRaster rastered;
                BufferedImage imgdest;
                try{
                   float[][]m= {{1.0F,0.0F,0.0F},{0.0F,0.0F,1.0F},{0.0F,1.0F,0.0F}};
                    BandCombineOp bcop = new BandCombineOp(m, null);
                    rastered = bcop.filter(ImgSource.getRaster(), null);
                    imgdest = new BufferedImage(ImgSource.getColorModel(), rastered, false,null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jMenuItemBandCombineOpActionPerformed

    private void jMenuItemAffineTransformOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAffineTransformOpActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                AffineTransform at = AffineTransform.getScaleInstance(1.25, 1.25);
                try{
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jMenuItemAffineTransformOpActionPerformed
    BufferedImage convertImageType(BufferedImage img, int type){
          if(img==null) return null; 
       BufferedImage imgOut = new BufferedImage(img.getWidth(), 
  img.getHeight(), type); 
       Graphics2D g2d = imgOut.createGraphics(); 
       g2d.drawImage(img,0,0,null); 
       return imgOut; 
    }
    private void jMenuItemLookUpOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLookUpOpActionPerformed
         VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           BufferedImage image = convertImageType(ImgSource, BufferedImage.TYPE_INT_RGB);
           if(ImgSource!=null){
        try{
            LookupTable It=LookupTableProducer.sFuction(128.0, 3.0);
            LookupOp lop = new LookupOp(It, null);
            BufferedImage imgdest = lop.filter(image,null);
            vi.getLienzo().setImage(imgdest);
            vi.getLienzo().repaint();
        }catch (Exception e ){
            System.err.println("Error");
        }
           }
       }
    }//GEN-LAST:event_jMenuItemLookUpOpActionPerformed

    private void jMenuItemColorConvertOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemColorConvertOpActionPerformed
       VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(ImgSource!=null){
        try{
            ICC_Profile ip;
            ip = ICC_Profile.getInstance(ColorSpace.CS_GRAY);
            ColorSpace cs = new ICC_ColorSpace(ip);
            ColorConvertOp ccop = new ColorConvertOp(cs, null);
            BufferedImage imgdest = ccop.filter(ImgSource, null);
            vi.getLienzo().setImage(imgdest);
            vi.getLienzo().repaint();
        }catch (Exception e ){
            System.err.println("Error");
        }
           }
       }
    }//GEN-LAST:event_jMenuItemColorConvertOpActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           BufferedImage image = convertImageType(ImgSource, BufferedImage.TYPE_INT_RGB);
           if(ImgSource!=null){
        try{
            LookupTable It=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_SFUNCION);
            LookupOp lop = new LookupOp(It, null);
            BufferedImage imgdest = lop.filter(image,null);
            vi.getLienzo().setImage(imgdest);
            vi.getLienzo().repaint();
        }catch (Exception e ){
            System.err.println("Error");
        }
           }
       }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           BufferedImage image = convertImageType(ImgSource, BufferedImage.TYPE_INT_RGB);
           if(ImgSource!=null){
        try{
            LookupTable It=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_LOGARITHM);
            LookupOp lop = new LookupOp(It, null);
            BufferedImage imgdest = lop.filter(image,null);
            vi.getLienzo().setImage(imgdest);
            vi.getLienzo().repaint();
        }catch (Exception e ){
            System.err.println("Error");
        }
           }
       }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           BufferedImage image = convertImageType(ImgSource, BufferedImage.TYPE_INT_RGB);
           if(ImgSource!=null){
        try{
            LookupTable It=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_POWER);
            LookupOp lop = new LookupOp(It, null);
            BufferedImage imgdest = lop.filter(image,null);
            vi.getLienzo().setImage(imgdest);
            vi.getLienzo().repaint();
        }catch (Exception e ){
            System.err.println("Error");
        }
           }
       }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButtonAgrandarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgrandarActionPerformed
        // TODO add your handling code here:
         VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                AffineTransform at = AffineTransform.getScaleInstance(1.25, 1.25);
                try{
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jButtonAgrandarActionPerformed

    private void jButtonAchicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAchicarActionPerformed
 VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                AffineTransform at = AffineTransform.getScaleInstance(0.75,0.75);
                try{
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAchicarActionPerformed

    private void jButton180gradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton180gradosActionPerformed
 VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
               double r = Math.toRadians(180); 
                Point p = new Point(ImgSource.getWidth()/2, ImgSource.getHeight()/2); 
                AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);  
               
                try{
                    
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jButton180gradosActionPerformed

    private void jButton270gradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton270gradosActionPerformed
        // TODO add your handling code here:
         VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
               double r = Math.toRadians(270); 
                Point p = new Point(ImgSource.getWidth()/2, ImgSource.getHeight()/2); 
                AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);  
               
                try{
                    
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jButton270gradosActionPerformed

    private void jButton90gradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton90gradosActionPerformed
 VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
               double r = Math.toRadians(90); 
                Point p = new Point(ImgSource.getWidth()/2, ImgSource.getHeight()/2); 
                AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);  
               
                try{
                    
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jButton90gradosActionPerformed

    private void jSliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRotacionStateChanged
         VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           if(img==null)img=ImgSource;
           if(ImgSource!=null){
                
               
                try{
                    double r = Math.toRadians(jSliderRotacion.getValue()); 
                    Point p = new Point(img.getWidth(null)/2, img.getWidth(null)/2); 
                    AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y); 
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(img, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jSliderRotacionStateChanged

    private void jSliderRotacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderRotacionFocusLost
            // TODO add your handling code here:
        img=null;
    }//GEN-LAST:event_jSliderRotacionFocusLost

    private void jMenuItemRestaOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRestaOpActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame(); 
    if (vi != null) { 
      BufferedImage imgRight = vi.getLienzo().getImage(); 
      VentanaInterna viNext = (VentanaInterna)escritorio.selectFrame(true); 
      if(viNext != null){ 
         BufferedImage imgLeft = viNext.getLienzo().getImage(); 
        RestaOp op = new RestaOp(imgLeft); 
        BufferedImage imgdest = op.filter(imgRight, null); 
        vi.getLienzo().setImage(imgdest);
        vi.getLienzo().repaint();
        } 
}
    }//GEN-LAST:event_jMenuItemRestaOpActionPerformed

    private void jMenuItemUmbralizacionOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUmbralizacionOpActionPerformed
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                
                try{
                    UmbralizacionOp atop = new UmbralizacionOp(50);
                    BufferedImage imgdest = atop.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jMenuItemUmbralizacionOpActionPerformed

    private void jMenuItemMultiplicacionOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMultiplicacionOpActionPerformed
        VentanaInterna vi = (VentanaInterna)escritorio.getSelectedFrame(); 
    if (vi != null) { 
      BufferedImage imgRight = vi.getLienzo().getImage(); 
      VentanaInterna viNext = (VentanaInterna)escritorio.selectFrame(true); 
      if(viNext != null){ 
         BufferedImage imgLeft = viNext.getLienzo().getImage(); 
        MultiplicacionOp op = new MultiplicacionOp(imgLeft); 
        BufferedImage imgdest = op.filter(imgRight, null); 
        vi.getLienzo().setImage(imgdest);
        vi.getLienzo().repaint();
        } 
}
    }//GEN-LAST:event_jMenuItemMultiplicacionOpActionPerformed

    private void jMenuItemSobelOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobelOpActionPerformed
         VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
       if(vi!=null){
           BufferedImage ImgSource=vi.getLienzo().getImage();
           
           if(ImgSource!=null){
                
                try{
                    SobelOp sobel = new SobelOp();
                    BufferedImage imgdest = sobel.filter(ImgSource, null);
                    vi.getLienzo().setImage(imgdest);
                   vi.getLienzo().repaint();
                }catch(Exception e){
                    System.err.println("error");
                }
            }
       }
    }//GEN-LAST:event_jMenuItemSobelOpActionPerformed

    private void jMenuItemAbrir_sonidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrir_sonidoActionPerformed
       
  JFileChooser dlg = new JFileChooser(); 
  dlg.setFileFilter(filter);
  int resp=dlg.showOpenDialog(this);
  if( resp == JFileChooser.APPROVE_OPTION) { 
    try{
        File f = dlg.getSelectedFile(); 
        VentanaInternaReproductor rep = new VentanaInternaReproductor(f);
        this.escritorio.add(rep);
        rep.setTitle("Rep.: "+f.getName());
        rep.setVisible(true);
    }catch(Exception ex){ 
      System.err.println("Error"); 
    }
  }
  
  
    }//GEN-LAST:event_jMenuItemAbrir_sonidoActionPerformed

    private void jMenuItemGrabar_SonidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGrabar_SonidoActionPerformed
        JFileChooser dlg = new JFileChooser(); 
        dlg.setFileFilter(filter);
  int resp=dlg.showSaveDialog(this);
  if( resp == JFileChooser.APPROVE_OPTION) { 
    try{
        File f = dlg.getSelectedFile(); 
        VentanaInternaGrabacion rec = new VentanaInternaGrabacion(f);
        this.escritorio.add(rec);
        rec.setTitle(f.getName());
        
        rec.setVisible(true);
    }catch(Exception ex){ 
      System.err.println("Error"); 
    }
  }
    }//GEN-LAST:event_jMenuItemGrabar_SonidoActionPerformed

    private void jPanelEscalaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelEscalaMouseEntered
        this.jLabelBarraEstado.setText("Aumentar o disminuir el tama√±o de la imagen");
    }//GEN-LAST:event_jPanelEscalaMouseEntered

    private void jPanelEscalaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelEscalaMouseExited
        this.jLabelBarraEstado.setText(" ");
    }//GEN-LAST:event_jPanelEscalaMouseExited

    private void jButtonAgrandarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAgrandarMouseEntered
       this.jLabelBarraEstado.setText("Aumentar el tama√±o de la imagen");
    }//GEN-LAST:event_jButtonAgrandarMouseEntered

    private void jButtonAchicarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAchicarMouseEntered
        this.jLabelBarraEstado.setText("Disminuir el tama√±o de la imagen");
    }//GEN-LAST:event_jButtonAchicarMouseEntered

    private void jMenuItemAbrirVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirVideoActionPerformed
        JFileChooser dlg = new JFileChooser(); 
        dlg.setFileFilter(filterVideo);
        int resp=dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) { 
            try{
                File f = dlg.getSelectedFile(); 
                URL url=new URL("file:"+f.getAbsolutePath());
                video = new VentanaInternaJMFPlayer();
                
                this.escritorio.add(video);
                video.setTitle("Rep.: "+f.getName());
               video.setSize(400, 410);
               video.setVisible(true);
                video.play(url);
            }catch(Exception ex){ 
              System.err.println("Error"); 
            }
        }
        
    }//GEN-LAST:event_jMenuItemAbrirVideoActionPerformed
/** Evento para abrir la webCam del objeto VentanaInternaCamara
	 * 
	 * 
	 * 
	 */
    private void jMenuItemAbrirWebCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirWebCamActionPerformed
        try{
                camara = new VentanaInternaCamara();
                this.escritorio.add(camara);
                camara.setTitle("Web Cam");
                camara.setSize(800, 500);
                //video.setLocation(null);
                //video.setDefaultCloseOperation(EXIT_ON_CLOSE);
                
                camara.setVisible(true);
                camara.play();
            }catch(Exception ex){ 
                System.err.println("Error"); 
            }
    }//GEN-LAST:event_jMenuItemAbrirWebCamActionPerformed

    
    /** Evento para capturar la imagen desde la webcam.
	 * 
	 * 
	 */
    private void jMenuItemCapturarWebCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCapturarWebCamActionPerformed
        
        try{ 
            camara = (VentanaInternaCamara)(escritorio.getSelectedFrame());
            VentanaInterna vi2 = new VentanaInterna();
            vi2.getLienzo().setImage(camara.getFrame()); 
            this.escritorio.add(vi2); 
            vi2.setVisible(true); 
        }catch(Exception ex){ 
//          System.err.println(ex); 
            JOptionPane.showMessageDialog(null, "Error al hacer la captura "+ex);
        } 
        
        
    }//GEN-LAST:event_jMenuItemCapturarWebCamActionPerformed

    private void jMenuItemCapturarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCapturarVideoActionPerformed
        // TODO add your handling code here:
         try{ 
            video = (VentanaInternaJMFPlayer)(escritorio.getSelectedFrame());
            VentanaInterna vi2 = new VentanaInterna();
            vi2.getLienzo().setImage(video.getFrame()); 
            this.escritorio.add(vi2); 
            vi2.setVisible(true); 
        }catch(Exception ex){ 
//          System.err.println(ex); 
            JOptionPane.showMessageDialog(null, "Error al hacer la captura "+ex);
        } 
    }//GEN-LAST:event_jMenuItemCapturarVideoActionPerformed
    
    /** Metodo sobreescrito para cambiar el icono de la imagen de la aplicacion.
	 * 
	 * 
	 * @return			Devuelve el icono a cambiar en la aplicacion
	 */
    public Image getIconImage(){    //metodo para cambiar el icono de la imagen del programa
        
        Image ret = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("iconos/PlayPressed_48x48.png"));
        return ret;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ResacaleOp;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButton180grados;
    private javax.swing.JButton jButton270grados;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton90grados;
    private javax.swing.JButton jButtonAchicar;
    private javax.swing.JButton jButtonAgrandar;
    private javax.swing.JButton jButtonAmarillo;
    private javax.swing.JButton jButtonAzul;
    private javax.swing.JButton jButtonBlanco;
    private javax.swing.JButton jButtonNegro;
    private javax.swing.JButton jButtonRojo;
    private javax.swing.JButton jButtonVerde;
    private javax.swing.JCheckBox jCheckBoxEditar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemOcultaBarraEstado;
    private javax.swing.JCheckBox jCheckBoxRelleno;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabelBarraEstado;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdicion;
    private javax.swing.JMenu jMenuImagen;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAbrirImagen;
    private javax.swing.JMenuItem jMenuItemAbrirVideo;
    private javax.swing.JMenuItem jMenuItemAbrirWebCam;
    private javax.swing.JMenuItem jMenuItemAbrir_sonido;
    private javax.swing.JMenuItem jMenuItemAffineTransformOp;
    private javax.swing.JMenuItem jMenuItemBandCombineOp;
    private javax.swing.JMenuItem jMenuItemCapturarVideo;
    private javax.swing.JMenuItem jMenuItemCapturarWebCam;
    private javax.swing.JMenuItem jMenuItemColorConvertOp;
    private javax.swing.JMenuItem jMenuItemGrabar_Sonido;
    private javax.swing.JMenuItem jMenuItemGuardarImagen;
    private javax.swing.JMenuItem jMenuItemLookUpOp;
    private javax.swing.JMenuItem jMenuItemMultiplicacionOp;
    private javax.swing.JMenuItem jMenuItemNuevoImagen;
    private javax.swing.JMenuItem jMenuItemRestaOp;
    private javax.swing.JMenuItem jMenuItemSobelOp;
    private javax.swing.JMenuItem jMenuItemUmbralizacionOp;
    private javax.swing.JMenu jMenuSonido;
    private javax.swing.JMenu jMenuWebCam;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAbajo;
    private javax.swing.JPanel jPanelBrilloFiltro;
    private javax.swing.JPanel jPanelColor;
    private javax.swing.JPanel jPanelContraste;
    private javax.swing.JPanel jPanelEscala;
    private javax.swing.JPanel jPanelGrosor;
    private javax.swing.JPanel jPanelRellenoEditar;
    private javax.swing.JPanel jPanelRotacion;
    private javax.swing.JSlider jSliderBrillo;
    private javax.swing.JSlider jSliderRotacion;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JToggleButton jToggleButtonElipse;
    private javax.swing.JToggleButton jToggleButtonLinea;
    private javax.swing.JToggleButton jToggleButtonPunto;
    private javax.swing.JToggleButton jToggleButtonRectangulo;
    private javax.swing.JToolBar jToolBarPintar;
    // End of variables declaration//GEN-END:variables
}
